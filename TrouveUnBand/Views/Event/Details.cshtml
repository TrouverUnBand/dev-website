@model TrouveUnBand.Models.Event

@{
    ViewBag.Title = "Détails événement";
}
@using (Html.BeginForm("Edit", "Event", FormMethod.Post, new { @role = "form", enctype = "multipart/form-data" }))
{
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.EventId)
        @Html.Hidden("Creator", User.Identity.Name)

        <div  id="CreateEventForm" class="top-80">
                    <div class="container">
                        <div class="row form-group col-md-12 col-md-push-3">
                            <div class="col-md-12 col-md-pull-4">
                                <h3>Information de l'événement</h3>
                                <hr class="colorgraph" id="eventline">
                            </div>
                            <div class="modal-body col-md-6 col-md-pull-4">
                            @if (Model.EventPhoto == null)
                            {
                                <img src="http://placehold.it/400x250" alt="Image">
                            }
                            else
                            {
                                var photo = "data:image/jpeg;base64," + Convert.ToBase64String(Model.EventPhoto);
                                <img src="@photo" width="400" class="photo" alt="Image">
                            }
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Nom de l'événement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventName, 
                                        new { @class = "form-control", @placeholder = "Nom de l'événement" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventName)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Emplacement de l'événement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventLocation, 
                                        new { @class = "form-control", @placeholder = "Emplacement de l'événement" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventLocation)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Adresse de l'emplacement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventAddress, 
                                        new { @class = "form-control", @placeholder = "Adresse de l'emplacement" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventAddress)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Ville de l'emplacement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventCity, 
                                        new { @class = "form-control", @placeholder = "Ville de l'emplacement" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventCity)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Date de l'événement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventDate, 
                                        new { @class = "form-control", @placeholder = "Date de l'événement", @id = "datepicker", @type = "date" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventDate)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Audience maximale")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventMaxAudience, 
                                        new { @class = "form-control", @placeholder = "Audience maximale" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventMaxAudience)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Salaire pour l'événement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventSalary, 
                                        new { @class = "form-control", @placeholder = "Salaire pour l'événement" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventSalary)
                            </div>

                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Genre de l'événement")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventGender, 
                                        new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventGender)
                            </div>
                
                            <div class="form-group col-md-6 col-md-pull-4">
                                @Html.Label("Dimension de la scène")
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.EventStageSize, 
                                        new { @class = "form-control", @placeholder = "Dimension de la scène" })
                                </div>
                                @Html.ValidationMessageFor(model => model.EventStageSize)
                            </div>
                            <div class="col-md-12 col-md-pull-4">
                                <div class="col-md-12">
                                    <hr class="colorgraph"/>
                                </div>

                                <div class="col-md-6">
                                    @Html.ActionLink("Retour", "Index", new { controller = "Event" }, 
                                        new { @class = "btn btn-default col-md-12" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
