@model TrouveUnBand.Models.Event

@{
    ViewBag.Title = "Delete";
}

<div  id="CreateEventForm" class="top-80">
        <div class="container">
            <div class="row form-group col-md-12 col-md-push-3">
                <div class="col-md-12 col-md-pull-4">
                    <h3>Voulez vous vraiment annuler l'évènement suivant?</h3>
                    <hr class="colorgraph">
                </div>
                <div class="modal-body col-md-6 col-md-pull-4">
                            @if (Model.EventPhoto == null)
                            {
                                <img src="http://placehold.it/400x250" alt="Image">
                            }
                            else
                            {
                                var photo = "data:image/jpeg;base64," + Convert.ToBase64String(Model.EventPhoto);
                                <img src="@photo" width="400" class="photo" alt="Image">
                            }
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Nom de l'évènement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventName)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventName)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Emplacement de l'évènement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventLocation)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventLocation)
                </div>

                <div class="form-group col-md-6  col-md-pull-4">
                    @Html.Label("Adresse de l'emplacement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventAddress)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventAddress)
                </div>

                <div class="form-group col-md-6  col-md-pull-4">
                    @Html.Label("Ville de l'emplacement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventCity)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventCity)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Date de l'évènement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventDate)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventDate)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Audience maximale")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventMaxAudience)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventMaxAudience)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Salaire pour l'évènement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventSalary)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventSalary)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Genre de l'évènement")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventGender)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventGender)
                </div>

                <div class="form-group col-md-6 col-md-pull-4">
                    @Html.Label("Dimension de la scène")
                    <div class="form-control">
                        @Html.DisplayFor(model => model.EventStageSize)
                    </div>
                    @Html.ValidationMessageFor(model => model.EventStageSize)
                </div>
                <div class="col-md-12 col-md-pull-4">
                    <div class="col-md-12">
                        <hr class="colorgraph"/>
                    </div>

                    <div class="col-md-6">
                        @Html.ActionLink("Retour", "Index", new { controller = "Event" }, new { @class = "btn btn-default col-md-12" })
                    </div>
                    <div class="col-md-6">
                        @using (Html.BeginForm()) {
                            <input type="submit" value="Annuler l'évènement" class="btn btn-danger col-md-12" />
                        }
                    </div>
                </div>
            </div>
        </div>
