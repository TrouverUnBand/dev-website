@model TrouveUnBand.Models.Band

@{
    ViewBag.Title = "Création band";
}

<h2>Création de band</h2>
@if (Request.IsAuthenticated)
{
    var band = (TrouveUnBand.Models.Band)ViewData["BandData"];

    <div class="span5">
        @using (Ajax.BeginForm("CreateSubmit", "Group", FormMethod.Get, new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "ConfirmCreateView" }))
        {
    
            <div class="editor-label">
                @Html.Label("Nom")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div>
                @Html.Label("Genre")
            </div>
            <div>
                @Html.DropDownList("GenreList", new SelectList(ViewBag.GenreListDD, "GenreId", "Name", 0), new { @class = "form-control " })
            </div>
            <div>
            @if (ViewData["Genres"] != null)
            {
                foreach (var item in (List<TrouveUnBand.Models.Genre>)ViewData["Genres"])
                {
                    int i = 0;
                    @Html.DropDownList("GenreList", new SelectList(ViewBag.GenreListDD, "GenreId", "Name", Convert.ToInt32(item.GenreId)), new { @class = "form-control " })
                            i++;
                            <tr name="@i" id="tablerow" class="form-group col-md-12 row">
                                <td id="tablecell" class="col-md-3">
                                    @Html.DropDownList("InstrumentList", new SelectList(ViewBag.InstrumentListDD, "InstrumentId", "Name",
                                                                Convert.ToInt32(item.GenreId)), new { @class = "form-control" })
                                </td>
                                <td id="tablecell" class="col-md-3">
                                    @if (i > 1)
                                    {
                                        <a id="Xfermer" href="#" onclick='RemoveGenre("@i")'>X</a>
                                    }
                                </td>
                            </tr>
                }
            }
            </div>
            
            @Html.Label("Musiciens")

            <div>
            @if (ViewData["Musicians"] != null)
            {
                foreach (var item in (List<TrouveUnBand.Models.Musician>)ViewData["Musicians"])
                {
                    @Html.Display(item.User.FirstName + " " + item.User.LastName);
                }
            }
            </div>
            
            
            
            
            
            
            
            
            <div class="editor-label">
                @Html.Label("Location")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>

            <div class="editor-label">
                @Html.Label("Description")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)

            </div>

                <button type="submit" value="Créer">Créer</button>
        }

                        <button type="button" class="btn btn-default btn-lg">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
    </div>


}
else
{
    <div class="row">
        <div class="col-lg-3 span3 offset2">
            <h2>@Html.ActionLink("S'identifier", "Login", "Users", routeValues: null, htmlAttributes: new { id = "LoginLink" })</h2>
        </div>
        <div class="col-lg-3 span3">
            <h2>@Html.ActionLink("S'enregistrer", "Register", "Users", routeValues: null, htmlAttributes: new { id = "RegisterLink" })</h2>
        </div>
    </div>
}
