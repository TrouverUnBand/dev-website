@model TrouveUnBand.Models.Musician
@{
    ViewBag.Title = "ProfileModification";
}

<script type="text/javascript">
     $(function () {

         var values = new Array();

         $(document).on('change', '.form-group-multiple-selects .input-group-multiple-select:last-child select', function () {
             var selectsLength = $('.form-group-multiple-selects .input-group-multiple-select select').length;
             var optionsLength = ($(this).find('option').length) - 1;

             if (selectsLength < optionsLength) {
                 var sInputGroupHtml = $(this).parent().html();
                 var sInputGroupClasses = $(this).parent().attr('class');
                 $(this).parent().parent().append('<div class="' + sInputGroupClasses + '">' + sInputGroupHtml + '</div>');
             }

             updateValues();

         });

         $(document).on('change', '.form-group-multiple-selects .input-group-multiple-select:not(:last-child) select', function () {

             updateValues();

         });

         $(document).on('click', '.input-group-addon-remove', function () {
             $(this).parent().remove();
             updateValues();
         });

         function updateValues() {
             values = new Array();
             $('.form-group-multiple-selects .input-group-multiple-select select').each(function () {
                 var value = $(this).val();
                 if (value != 0 && value != "") {
                     values.push(value);
                 }
             });

             $('.form-group-multiple-selects .input-group-multiple-select select').find('option').each(function () {
                 var optionValue = $(this).val();
                 var selectValue = $(this).parent().val();
                 if (in_array(optionValue, values) != -1 && selectValue != optionValue) {
                     $(this).attr('disabled', 'disabled');
                 }
                 else {
                     $(this).removeAttr('disabled');
                 }
             });
         }

         function in_array(needle, haystack) {
             var found = 0;
             for (var i = 0, length = haystack.length; i < length; i++) {
                 if (haystack[i] == needle) return i;
                 found++;
             }
             return -1;
         }
     });
</script> 


@if (Request.IsAuthenticated)
{  
    var user = (TrouveUnBand.Models.Musician)ViewData["UserData"];

    using (Html.BeginForm("ProfileModification", "Users", FormMethod.Post, new { @class = "row", @role = "form", enctype = "multipart/form-data" }))
    {
        <div class="row margin-top-50">
            <div class="bs-example">
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#sectionUtil">Profil Utilisateur</a></li>
                    <li><a data-toggle="tab" href="#sectionMusician">Profil Musicien</a></li>
                    <li><a data-toggle="tab" href="#sectionBand">Profil Band</a></li>
                </ul>
                <div class="tab-content">
                    <div id="sectionUtil" class="tab-pane fade in active">
                        <div class="row pad-top-30">
                            <div class="col-md-4">
                                <div class="row col-md-offset-2">
                                    @Html.Label("Profile Picture:")
                                </div>
                                <a class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal"><img alt="" src="@user.User.PhotoName" width="350" class="photo" /></a>
                                <input class="btn" type="file" name="FileUpload" />

                                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                  <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                    <div class="modal-header">
                                        <div class="row padding-right-20">
                                            <button type="button" class="close" data-dismiss="modal">X</button>
                                        </div>
                                      </div>
                                      <div class="modal-body centrer-image">
                                        <img alt="" src="@user.User.PhotoName" width="600" class="photo"/>
                                      </div>
                                      <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                            </div>
                            <div class="pad-top-10">
                            @Html.HiddenFor(model => model.User.UserId, new { @class = "form-control", @Value = user.User.UserId })
                                <div class="form-group col-md-3 col-md-push-1">
                                    @Html.Label("First name:")
                                    @Html.TextBoxFor(model => model.User.FirstName, new { @class = "form-control", @Value = user.User.FirstName })
                                    @Html.ValidationMessage("FirstName")
                                </div>
                                <div class="form-group col-md-3 col-md-push-1">         
                                    @Html.Label("Last name:")
                                    @Html.TextBoxFor(model => model.User.LastName, new { @class = "form-control", @Value = user.User.LastName })
                                    @Html.ValidationMessage("LastName")
                                </div>
                                <div class="form-group col-md-3 col-md-push-1">                
                                    @Html.Label("Birthdate:")
                                    @Html.TextBoxFor(model => model.User.BirthDate, new { @class = "form-control", @Value = user.User.BirthDate.ToString("yyyy/MM/dd") })
                                    @Html.ValidationMessage("BirthDate")
                                </div>
                                <div class="form-group col-md-3 col-md-push-1">                
                                    @Html.Label("Gender:")
                                    @Html.DropDownListFor(model => model.User.Gender, new SelectList(
                                          new List<Object>{ 
                                               new { value = "Homme" , text = "Homme"  },
                                               new { value = "Femme" , text = "Femme" },
                                            },
                                          "value",
                                            "text", user.User.Gender), new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-3 col-md-push-1">           
                                    @Html.Label("City:")
                                    @Html.TextBoxFor(model => model.User.Location, new { @class = "form-control", @Value = user.User.Location })
                                    @Html.ValidationMessage("Location")
                                </div>
        
                                <div class="form-group col-md-3 col-md-push-1">                
                                    @Html.Label("Email:")
                                    @Html.TextBoxFor(model => model.User.Email, new { @class = "form-control", @Value = user.User.Email })
                                    @Html.ValidationMessage("Email")
                                </div> 
                                <div class="row form-group col-md-3 margin-left-0 col-md-push-1">
                                    <input type="submit" class="btn btn-primary" value="Modifier"/>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="sectionMusician" class="tab-pane fade">
                    <div class="pad-top-30">
                        <div class="form-group input-group-multiple-select col-md-4 col-md-push-1">   
                            @Html.Label("Instrument:") 
                            @Html.DropDownList("InstrumentList", new SelectList(ViewBag.InstrumentList, "InstrumentId", "Name"), new { @class = "form-control"})
                        </div> 
                        <div class="form-group col-md-4 col-md-push-1">  
                            @Html.Label("Expérience:") 
                            @Html.DropDownList("SkillsList", new SelectList(
                                          new List<Object>{ 
                                               new { value = "1" , text = "*"  },
                                               new { value = "2" , text = "**" },
                                               new { value = "3" , text = "***"  },
                                               new { value = "4" , text = "****" },
                                               new { value = "5" , text = "*****"  },
                                            },
                                          "value",
                            "text"), new { @class = "form-control" })
                        </div> 
                        <div class="form-group col-md-10 col-md-push-1"> 
                        @Html.Label("Instrument(s) joué(s)");
                                    <table>
                                        @foreach (TrouveUnBand.Models.Join_Musician_Instrument InstrumentsUser in user.Join_Musician_Instrument)
                                         {
                                           <tr>
                                                <td>
                                                    @Html.DropDownList("InstrumentListDD", new SelectList(ViewBag.InstrumentList, "InstrumentId", "Name",
                                                    @Convert.ToInt32(InstrumentsUser.InstrumentId)), new { @class = "form-control" })
                                                </td>   
                                                <td>
                                                    @Html.DropDownList("SkillsList", new SelectList(
                                                    new List<Object>{ 
                                                    new { value = "1" , text = "*"  },
                                                    new { value = "2" , text = "**" },
                                                    new { value = "3" , text = "***"  },
                                                    new { value = "4" , text = "****" },
                                                    new { value = "5" , text = "*****"  },
                                                    },
                                                    "value", "text", @InstrumentsUser.Skills),
                                                    new { @class = "form-control" })
                                                </td>
                                           </tr>
                                         }
                                    </table>
                                </div>
                        <div class="row form-group col-md-3 margin-left-0 col-md-push-1">
                            <input type="submit" class="btn btn-primary" value="Modifier"/>
                        </div>
                    </div>
                    </div> 
                    <div id="sectionBand" class="tab-pane fade">

                    </div>
                </div>
            </div>
        </div>     
    }
}
else
{
    <h2>@Html.ActionLink("Sign in", "Login", "Users", routeValues: null, htmlAttributes: new { id = "registerLink" })</h2>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
